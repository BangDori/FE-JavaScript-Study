function leftTodo(Todo){//ÎÇ®ÏùÄ Ìï†Ïùº ÏóÖÎç∞Ïù¥Ìä∏
    let sum = 0;
    Todo.order.forEach((v)=>{
        if(!v.state){
            sum += 1;
        }
    })

    const LEFT_ITEMS = document.getElementsByClassName("left-items")[0];
    if(Todo.mode === 2){
        sum = Todo.order.length - sum;
        LEFT_ITEMS.innerText = `ü•ï Ïò§Îäò ÎÅùÎÇ∏ ÏùºÏù¥ ${sum}Í∞ú ÏûàÏäµÎãàÎã§ ü•ï`;
    }else{
        LEFT_ITEMS.innerText = `ü•ï Ïò§Îäò Ìï† ÏùºÏù¥ ${sum}Í∞ú ÎÇ®ÏïòÏäµÎãàÎã§ ü•ï`;
    }
}

function validation(Todo, value){// inputÏóê ÏûÖÎ†•Îêú Í∞íÏùò Ï§ëÎ≥µ, Í≥µÎ∞±Ïó¨Î∂Ä ÌåêÎã®
    if (value.length === 0 || value.trim().length === 0){
        alert("todo can not be empty");
        return 0;
    }
    if (value.length > 25 ){
        alert("todo is too long");
        return 1;
    }
    if (Todo.has(value)){
        alert("todo already exists");
        return 2;
    }
    return 3;
}

export function addTodo(Todo,TODO_INPUT) { // Todo Ï∂îÍ∞Ä
    switch (validation(Todo, TODO_INPUT.value)){
        case 0:
            TODO_INPUT.value = "";
            break;
        case 3:
            new Todo(TODO_INPUT.value); // Todo ÌÅ¥ÎûòÏä§Ïùò Ïä§ÌÉúÌã± Î∞∞Ïó¥Ïóê Î∞îÎ°ú Í∞íÏùÑ Ï∂îÍ∞ÄÌï®
            TODO_INPUT.value = "";
            renderTodo(Todo);
            break;
    }
}

export function renderTodo(Todo) { //Todo-list ÌÉúÍ∑∏ Î†åÎçîÎßÅ
    leftTodo(Todo);//ÎÇ®ÏùÄ Ìï† Ïùº ÏóÖÎç∞Ïù¥Ìä∏
    const TODO_LIST = document.getElementsByClassName("todo-list")[0];
    while(TODO_LIST.firstChild){
        TODO_LIST.firstChild.remove();
    }

    Todo.order.forEach(function(todoItem){
        const VIEW = todoItem.state;
        if(Todo.mode === 1 && VIEW === true){
            return;
        }else if(Todo.mode === 2 && VIEW === false){
            return;
        }
        const LI = document.createElement("li");
        const CHECKBOX = document.createElement("button");
        const DELBTN = document.createElement("button");
        const INPUT = document.createElement("input");

        LI.setAttribute("class", "todo-item");
        LI.setAttribute("id", `todo_${todoItem.getOrder()}`);
        CHECKBOX.setAttribute("class", "checkbox");
        CHECKBOX.innerText = "‚úîÔ∏é";
        DELBTN.setAttribute("class", "delBtn");
        DELBTN.innerText = "üóëÔ∏è";

        INPUT.setAttribute("class", "content");
        INPUT.setAttribute("type", "text");
        INPUT.setAttribute("placeholder", "Ìï† ÏùºÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî!");
        INPUT.setAttribute("value", todoItem.content);
        if(VIEW){
            LI.setAttribute("class", "todo-item checked");
            INPUT.readOnly =true;
        }

        LI.appendChild(CHECKBOX);
        LI.appendChild(INPUT);
        LI.appendChild(DELBTN);
        TODO_LIST.appendChild(LI);
    })
}

export function initTodoEvent(Todo) { //Ï¥àÍ∏∞ Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï
    const TODO_LIST = document.getElementsByClassName("todo-list")[0];
    TODO_LIST.addEventListener("click", function(e){
        const TARGET = e.target;
        
        if (TARGET.classList.contains("checkbox")){
            const LI = TARGET.closest("li");
            const IDX = Number(LI.id.slice(5, LI.id.length));
            const TODO_ITEM = Todo.get(IDX);

            TODO_ITEM.state = !TODO_ITEM.state;
            renderTodo(Todo);
        }else if(TARGET.classList.contains("delBtn")){
            const LI = TARGET.closest("li");
            const IDX = Number(LI.id.slice(5, LI.id.length));

            Todo.remove(IDX);
            renderTodo(Todo);
        }
    });

    TODO_LIST.addEventListener("focusout", function(e){
        const TARGET = e.target;
        
        if (TARGET.classList.contains("content")){
            const LI = TARGET.closest("li");
            const IDX = Number(LI.id.slice(5, LI.id.length));

            if (TARGET.value !== Todo.get(IDX).content){
                if (validation(Todo, TARGET.value, true) === 3){
                    Todo.get(IDX).content = TARGET.value;
                }
            }
            renderTodo(Todo);
        }
    });
}